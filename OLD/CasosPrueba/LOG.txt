Codigo Cargado:
C:\Users\Manuel\IdeaProjects\Compilador\test_if.txt
TOKEN CARGADO: usinteger TIPO: usinteger
Se encuentra Tipo, se decide USINTEGER
TOKEN CARGADO: : TIPO: :
TOKEN CARGADO: _v TIPO: id
Se encuentrauna ID, se reduce a ListaID
TOKEN CARGADO: ; TIPO: ;
TOKEN CARGADO: _v2 TIPO: id
Se encuentra ListaID e ID,se reduce a ListaID
TOKEN CARGADO: , TIPO: ,
Se reconoce Tipo, ; y Lista ID
Se encuentra SentenciaDeclarativa, reduzco a SingleSentence
TOKEN CARGADO: if TIPO: if
TOKEN CARGADO: ( TIPO: (
TOKEN CARGADO: _v TIPO: id
TOKEN CARGADO: <= TIPO: <=
Se encuentra ID, reduzco a Factor
Se encuentra Factor, reduzco a Termino
Kittlein_Gallo.ParserVal@c0ea319
Se encuentra Termino, reduzco a Expresion
TOKEN CARGADO: 4 TIPO: constanteUsinteger
Se encuentra CTE_USINTENGER, reduzco a CTE
Se encuentra CTE, reduzco a Factor
Se encuentra Factor, reduzco a Termino
Kittlein_Gallo.ParserVal@3ddeab9a
TOKEN CARGADO: ) TIPO: )
Se encuentra Termino, reduzco a Expresion
Se encuentra Expresion Comparador Expresion, reduzco a Comparacion
TOKEN CARGADO: _v TIPO: id
TOKEN CARGADO: := TIPO: :=
TOKEN CARGADO: 77 TIPO: constanteUsinteger
Se encuentra CTE_USINTENGER, reduzco a CTE
Se encuentra CTE, reduzco a Factor
Se encuentra Factor, reduzco a Termino
Kittlein_Gallo.ParserVal@32075f03
TOKEN CARGADO: , TIPO: ,
Se encuentra Termino, reduzco a Expresion
Se encuentra ID ASIG Expresion, se reemplaza por asignacion
Se encontro Asignacion, se reemplaza por SentenciaDeclarativa
Se encuentra SentenciaDeclarativa, reduzco a SingleSentence
Se reemplaza IF (Comparacion) SingleSentence por IFSINELSE
Agrego a la polaca de tamaÃ±o 9 el string 10en el lugar 3
TOKEN CARGADO: else TIPO: else
TOKEN CARGADO: _v TIPO: id
TOKEN CARGADO: := TIPO: :=
TOKEN CARGADO: 78 TIPO: constanteUsinteger
Se encuentra CTE_USINTENGER, reduzco a CTE
Se encuentra CTE, reduzco a Factor
Se encuentra Factor, reduzco a Termino
Kittlein_Gallo.ParserVal@567a8cca
TOKEN CARGADO: , TIPO: ,
Se encuentra Termino, reduzco a Expresion
Se encuentra ID ASIG Expresion, se reemplaza por asignacion
Se encontro Asignacion, se reemplaza por SentenciaDeclarativa
Se encuentra SentenciaDeclarativa, reduzco a SingleSentence
TOKEN CARGADO: end_if TIPO: end_if
Se reduce IfSinElse ELSE SingleSentence por IFConELSE
Se reemplaza IfConElse por BloqueIF
Se reduce BloqueIF A sentencia
Agrego a la polaca de tamaÃ±o 13 el string 13en el lugar 8
Se encuentra SetenciaEjecutable, reduzco a SingleSentence
TOKEN CARGADO: , TIPO: ,
TOKEN CARGADO: _v2 TIPO: id
TOKEN CARGADO: := TIPO: :=
TOKEN CARGADO: 7 TIPO: constanteUsinteger
Se encuentra CTE_USINTENGER, reduzco a CTE
Se encuentra CTE, reduzco a Factor
Se encuentra Factor, reduzco a Termino
Kittlein_Gallo.ParserVal@2f95eb77
TOKEN CARGADO: , TIPO: ,
Se encuentra Termino, reduzco a Expresion
Se encuentra ID ASIG Expresion, se reemplaza por asignacion
Se encontro Asignacion, se reemplaza por SentenciaDeclarativa
Se encuentra SentenciaDeclarativa, reduzco a SingleSentence
Se encuentra SingleSentence, reduzco a ListaSentencias
Se encuentra ListaSentencias SingleSentence, reduzco a ListaSentencias
Se encuentra ListaSentencias SingleSentence, reduzco a ListaSentencias
Se encuentra ListaSentencias, reduzco a Programa
Recibido de Polaca: _v
Recibido de Polaca: UI_4
Recibido de Polaca: <=
Recibido de Polaca: 10
Recibido de Polaca: BF
Recibido de Polaca: UI_77
Recibido de Polaca: _v
Recibido de Polaca: :=
Recibido de Polaca: 13
Recibido de Polaca: BI
Recibido de Polaca: UI_78
Recibido de Polaca: _v
Recibido de Polaca: :=
Recibido de Polaca: UI_7
Recibido de Polaca: _v2
Recibido de Polaca: :=
